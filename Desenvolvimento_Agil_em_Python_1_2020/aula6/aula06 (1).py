# -*- coding: utf-8 -*-
"""Aula06.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mklPJiqk8zIU-d4Ne0PG9a30R6TDSXOd

<h1><b>Trabalhando com datas</b></h1>
"""

from datetime import date, time, datetime, timedelta
from dateutil.relativedelta import relativedelta
from time import sleep, asctime, time

"""**Ver o dia de hoje**"""

print(date.today())
print(asctime())

"""**Adicionar data e hora**

```
data = datetime(ano,mês,dia,hora,minuto,segundo)
data = date(ano,mês,dia)
data = datetime(hora,minuto,segundo)
```
"""

data1 = date(2020,7,11)
data2 = date(2020,10,23)
print(data1)
print(data2)

"""**Configurar apresentação do dia mês ano.....**

Usar com .strftime() <br>
.strftime( formato ) 
Retorne uma string que representa a data e a hora, controlada por uma string de formato explícito.
<br><br>

**%a** <br>
Dia da semana como nome abreviado da localidade.<br>
Sun, Mon, …, Sat (en_US);<br>
So, Mo, …, Sa (de_DE)
<br><br>

**%A**<br>

Dia da semana como o nome completo da localidade.<br>

Sunday, Monday, …, Saturday (en_US);<br>
Sonntag, Montag, …, Samstag (de_DE)
<br><br>

**%w**<br>

Dia da semana como um número decimal, onde 0 é domingo e 6 é sábado<br>

0, 1, …, 6<br><br>

**%d**<br>

Dia do mês como um número decimal preenchido com zero.<br>

01, 02, …, 31

<br><br>

**%b**<br>

Mês como nome abreviado da localidade.<br>

Jan, Feb, …, Dec (en_US);<br>
Jan, Feb, …, Dez (de_DE)
<br><br>

**%B**<br>

Mês como nome completo do código do idioma.<br>

January, February, …, December (en_US);<br>
Januar, Februar, …, Dezember (de_DE)
<br><br>

**%m**<br>

Mês como um número decimal preenchido com zero.<br>

01, 02, …, 12<br><br>



**%y**<br>

Ano sem século como um número decimal preenchido com zero.<br>

00, 01, …, 99

<br><br>

**%Y**<br>

Ano com o século como um número decimal.<br>

0001, 0002, …, 2013, 2014, …, 9998, 9999

<br><br>

**%H**<br>

Hora (relógio de 24 horas) como um número decimal preenchido com zero.<br>

00, 01, …, 23<br>

<br><br>

**%I**<br>

Hora (relógio de 12 horas) como um número decimal preenchido com zero.<br>

01, 02, …, 12

<br><br>

**%p**<br>

O equivalente da localidade é AM ou PM.

<br>

AM, PM (en_US);<br>
am, pm (de_DE)
<br><br>

**%M**<br>

Minuto como um número decimal preenchido com zero.<br>

00, 01, …, 59<br>

<br>

**%S**<br>

Segundo como um número decimal preenchido com zero.<br>

00, 01, …, 59

<br><br>

**%f**<br>

Microssegundo como um número decimal, preenchido com zero à esquerda.<br>

000000, 000001, …, 999999<br>

<br><br>

**%z**<br>

Deslocamento UTC no formulário ±HHMM[SS[.ffffff]](sequência vazia se o objeto for ingênuo).<br>

(empty), +0000, -0400, +1030, +063415, -030712.345216

<br><br>

**%Z**<br>
	
Nome do fuso horário (sequência vazia se o objeto for ingênuo).<br>

(empty), UTC, EST, CST<br><br>

**%j**<br>

Dia do ano como um número decimal preenchido com zero.<br>

001, 002, …, 366

<br><br>

**%U**<br>

	
Número da semana do ano (domingo como o primeiro dia da semana) como um número decimal preenchido com zero. Todos os dias em um novo ano anterior ao primeiro domingo são considerados na semana 0.<br>

00, 01, …, 53

<br><br>

**%W**<br>

	
Número da semana do ano (segunda-feira como o primeiro dia da semana) como um número decimal. Todos os dias em um novo ano anterior à primeira segunda-feira são considerados na semana 0.<br>

00, 01, …, 53

<br><br>

**%c**<br>

Representação apropriada de data e hora da localidade.<br>

Tue Aug 16 21:30:00 1988 (en_US);<br>
Di 16 Aug 21:30:00 1988 (de_DE)
<br><br>

**%x**<br>

Representação de data apropriada da localidade.<br>

08/16/88 (None);<br>
08/16/1988 (en_US);<br>
16.08.1988 (de_DE)
<br><br>

**%X**<br>

Representação de tempo apropriada da localidade.<br>

21:30:00 (en_US);<br>
21:30:00 (de_DE)
<br><br>

**%%**<br>

A literal '%' character.<br>

%<br><br>



Fonte:
https://docs.python.org/3/library/datetime.html?highlight=dateutil#strftime-strptime-behavior
"""

data1 = date(2020,7,11)
data2 = date(2020,10,23)
print(data1.strftime("%d/%m/%Y"))
print(data2.strftime("%d/%m/%Y"))

"""**Diferença entre 2 datas**"""

data1 = date(2020,7,11)
data2 = date(2020,10,23)
print(data1-data2)

"""**Somando dias a datas**

Usando o timedelta

```
timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)
```

Um milissegundo é convertido em 1000 microssegundos.<br>
Um minuto é convertido em 60 segundos.<br>
Uma hora é convertida em 3600 segundos.<br>
Uma semana é convertida em 7 dias.<br>

---

Usando o relativedelta

```
relativedelta(years=0, months=0, days=0, leapdays=0, weeks=0, hours=0, minutes=0, seconds=0, microseconds=0)
```
"""

dt = data1 + relativedelta(months=+3)
print(dt.strftime("%d/%m/%Y"))

date.today()+relativedelta(months=+3)

"""**Pausando o programa**
<br>
função sleep paus o programa por um determinado tempo em segundos<br>
```
sleep(segundos)
```
"""



"""**Contando o tempo de execução**
<br>
A função time() retorna a quantidade de tempo do sistema em segundos

```
time(30)
```
"""

a = time()
print('Olá')
sleep(5)
print("mundo")
print(time()-a)